"""
Django settings for core project.

Generated by 'django-admin startproject' using Django 5.2.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-o@jqk-^&pzi56ue4z=dx%s&$r%^2w!!9ohmqdmdr275nh-d_o^'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # Nossos apps
    'rest_framework',
    'usuarios',
    'ensino.apps.EnsinoConfig',
    'corsheaders',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'core.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'core.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

AUTH_USER_MODEL = 'usuarios.Usuario'

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        # Usa o sistema de login por sessão do Django.
        'rest_framework.authentication.SessionAuthentication',
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        # Por padrão, exige que o usuário esteja autenticado,
        # a menos que uma view especifique o contrário.
        'rest_framework.permissions.IsAuthenticated',
    ]
}

# --- CONFIGURAÇÕES DO CORS ---

# Lista de origens (endereços do frontend) que têm permissão para fazer pedidos.
CORS_ALLOWED_ORIGINS = [
    "http://localhost:3000",  # Endereço padrão para React
    "http://localhost:8080",  # Endereço padrão para Vue.js
    "http://localhost:4200",  # Endereço padrão para Angular
    "http://127.0.0.1:3000",
    "http://127.0.0.1:8080",
    "http://127.0.0.1:4200",
]

# Para o nosso sistema de login com cookies funcionar, precisamos disto.
# Permite que o navegador envie o cookie de sessão junto com o pedido.
CORS_ALLOW_CREDENTIALS = True

CSRF_TRUSTED_ORIGINS = [
    "http://localhost:3000",
    "http://127.0.0.1:3000",
    # "https://seu-dominio.com"
]

CSRF_COOKIE_SECURE = False
SESSION_COOKIE_SECURE = False

# Atualize as configurações de CSRF e SESSION cookies
CSRF_COOKIE_HTTPONLY = False  # Permite acesso via JavaScript (necessário para frontend)
SESSION_COOKIE_HTTPONLY = True  # Mantém session cookie HTTP Only por segurança

# Essas configurações são essenciais para desenvolvimento local
CSRF_COOKIE_SAMESITE = 'Lax'  # Ou 'None' se estiver usando HTTPS entre domínios diferentes
SESSION_COOKIE_SAMESITE = 'Lax'  # Mesmo valor do CSRF

# Adicione esta configuração para expor o cookie CSRF
CORS_EXPOSE_HEADERS = ['Set-Cookie']

# Atualize a lista de cabeçalhos permitidos
CORS_ALLOW_HEADERS = [
    'accept',
    'accept-encoding',
    'authorization',
    'content-type',
    'dnt',
    'origin',
    'user-agent',
    'x-csrftoken',  # Adicione este cabeçalho
    'x-requested-with',
]

# Adicione esta configuração para cookies em ambiente de desenvolvimento
CSRF_COOKIE_DOMAIN = 'localhost'  # Para desenvolvimento
SESSION_COOKIE_DOMAIN = 'localhost'  # Para desenvolvimento